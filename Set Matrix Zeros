/// brute force(tle)
#include <bits/stdc++.h>
void setZeros(vector<vector<int>> &matrix)
{
	vector<pair<int,int>>v;
	for(int i=0;i<matrix.size();i++)
	{
		for(int j=0;j<matrix[i].size();j++)
		{
			if(matrix[i][j]==0)
			{
				v.push_back({i,j});
			}
		}
	}
	for(int i=0;i<v.size();i++)
	{
		for(int k=0;k<matrix[0].size();k++)
		matrix[v[i].first][k]=0;
		for(int l=0;l<matrix.size();l++)
		{
			matrix[l][v[i].second]=0;
		}
	}
}
optimise(accepted)

#include <bits/stdc++.h>

void setZeros(vector<vector<int>> &matrix)
{
        bool row = false, col = false;
        for(int i = 0; i < matrix.size(); i++){
            for(int j = 0; j < matrix[0].size(); j++){
                if(matrix[i][j] == 0) {
                    if(i == 0) row = true;
                    if(j == 0) col = true;
                    matrix[0][j] = matrix[i][0] = 0;
                }
            }
        }
        for(int i = 1; i < matrix.size(); i++){
            for(int j = 1; j < matrix[0].size(); j++){
                if(matrix[i][0] == 0 || matrix[0][j] == 0) matrix[i][j] = 0;
            }
        }
        if(col){
            for(int i = 0; i < matrix.size(); i++) matrix[i][0] = 0;
        }
        if(row){
            for(int j = 0; j < matrix[0].size(); j++) matrix[0][j] = 0;
        }
}
